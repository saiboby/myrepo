AWSTemplateFormatVersion: "2010-09-09"
Resources:
  WindowsInstance:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        Fn::GetAZs: ''
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      DesiredCapacity: '1'
      MinSize: '1'
      MaxSize: '2'
    # CreationPolicy:
    #   AutoScalingCreationPolicy:
    #     MinSuccessfulInstancesPercent: 100
    #   ResourceSignal:
    #    Count: 1
    #    Timeout: PT10M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        PauseTime: PT10M
        MinSuccessfulInstancesPercent: 100
        WaitOnResourceSignals: true
  WaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: WindowsInstance
    Properties:
      Handle: !Ref 'WaitHandle'
      Timeout: '300'
      Count: 1
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-06371c9f2ad704460
        KeyName: jenkinskey
        InstanceType: t2.micro
        UserData:
          Fn::Base64: !Sub |
            <powershell>
            # echo sai
            Start-Transcript -Force -IncludeInvocationHeader -Path C:\ProgramData\Amazon\EC2-Windows\Launch\Log\UserdataExecution1.log
            aws s3 cp s3://trsai1234/string.ps1 "C:/deploy-tools/string.ps1"
            Stop-Transcript
            echo @'
            if (Select-String -Path C:\ProgramData\Amazon\EC2-Windows\Launch\Log\UserdataExecution1.log -Pattern "CommandNotFoundException"){
              $global:code = 1
              #& "C:\Program Files\Amazon\cfn-bootstrap\cfn-signal.exe" -e $code --stack ${AWS::StackId} --resource WindowsInstance --region ${AWS::Region}
              echo Sai
              & "C:\Program Files\Amazon\cfn-bootstrap\cfn-signal.exe" -e $code -d "This was all private." -r "Build Process Complete" '${WaitHandle}'

            }
            else{ 
              $global:code = 0
              #& "C:\Program Files\Amazon\cfn-bootstrap\cfn-signal.exe" -e $code --stack ${AWS::StackId} --resource WindowsInstance --region ${AWS::Region}
              echo babu 
              & "C:\Program Files\Amazon\cfn-bootstrap\cfn-signal.exe" -e $code -d "This was all private." -r "Build Process Complete" '${WaitHandle}'
            }
            '@ > cfncheck.ps1
            Write-Host "the logs before check script"
            Get-Content C:\ProgramData\Amazon\EC2-Windows\Launch\Log\UserdataExecution1.log
            #Start-Process "powershell" 'C:\Windows\System32\cfncheck.ps1'
            c:\Windows\System32\cfncheck.ps1
            Write-Host "the code is $code"
            </powershell>